{
  "name": "grunt-webdriver-jasmine-runner",
  "description": "A grunt plugin that runs jasmine tests using webdriver.",
  "version": "0.0.5",
  "homepage": "https://github.com/RallySoftware/grunt-webdriver-jasmine-runner",
  "author": {
    "name": "Ken & Robb",
    "email": "kheutmaker@rallydev.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/RallySoftware/grunt-webdriver-jasmine-runner"
  },
  "bugs": {
    "url": "https://github.com/RallySoftware/grunt-webdriver-jasmine-runner/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/RallySoftware/grunt-webdriver-jasmine-runner/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.coffee",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "selenium-webdriver": ">= 2.31.0"
  },
  "devDependencies": {
    "grunt-contrib-clean": ">= 0.4.0",
    "grunt-contrib-nodeunit": ">= 0.1.2",
    "grunt": ">= 0.4.0"
  },
  "peerDependencies": {
    "grunt": ">= 0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-webdriver-jasmine-runner\n\nA grunt plugin that runs jasmine tests using webdriver.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out\nthe [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create \na [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\n\nOnce you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install git+ssh://git@github.com:RallySoftware/grunt-webdriver-jasmine-runner.git\n```\n\nIf you do not have stored ssh credentials for github, you will need to authenticate\nto complete the installation.\n\nThe module can also be installed with package.json by adding a reference to the devDependencies block:\n\n```js\n{\n    \"name\": \"your-app-name\",\n    \"version\": \"99.99.99\",\n    \"devDependencies\": {\n        \"private-repo\": \"ssh://git@github.com:RallySoftware/grunt-webdriver-jasmine-runner.git\"\n    }\n}\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-webdriver-jasmine-runner');\n```\n\n### Setting up webdriver\n\nBrowser drivers will need to be installed for the browsers you plan to run tests on. If you use brew and want to run tests\non Chrome, use the following command:\n\n```brew install chromedriver```\n\nThe driver for firefox is included in the plugin.\n\n## The \"webdriver_jasmine_runner\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `webdriver_jasmine_runner` to the data object passed \ninto `grunt.initConfig()`.\n\n```coffee\ngrunt.initConfig\n  webdriver_jasmine_runner:\n    your_target:\n        options:\n            # your options here\n```\n\n### Options\n\n#### Summary (w/ default values)\n\n```coffee\n      seleniumJar: \"#{__dirname}/lib/selenium-server-standalone-2.31.0.jar\" # Only specified when starting a local selenium server\n      seleniumServerHost: undefined # Only specified when running tests on a remote selenium server\n      seleniumServerPort: 4444\n      browser: 'chrome'\n      testServer: 'localhost'\n      testServerPort: 8000\n      testFile: '_SpecRunner.html'\n      allTestsTimeout: 30 * 60 * 1000    # 30 minutes\n      keepalive: false\n```\n\n#### options.seleniumJar\n- Type: `String`\n- Default value: `\"#{__dirname}/lib/selenium-server-standalone-2.31.0.jar\"`\n\nThe location of the selenium standalone server jar.\n\n#### options.seleniumServerHost\n- Type: `String`\n- Default value: none\n\nThe hostname of a remote selenium server to use. If specified, a selenium server won't be started.\n\n#### options.seleniumServerPort\n- Type: `Number`\n- Default value: `4444`\n\nThe port number to use for the local selenium server when running locally or the remote selenium server when using a remote server.\n\n#### options.browser\n- Type: `String`\n- Default value: `'chrome'`\n- Allowed values: `'chrome', 'firefox', 'internet explorer', ...`\n    [source](http://selenium.googlecode.com/svn/trunk/docs/api/py/_modules/selenium/webdriver/common/desired_capabilities.html)\n\nThe browser in which the tests will be run.  This can also be specified via the --browser command-line option (below),\nwhich takes precedence.\n\n#### options.testServer\n- Type: `String`\n- Default value: `'localhost'`\n\nThe address of the server where the application is running.\n\n#### options.testServerPort\n- Type: `Number`\n- Default value: `8000`\n\nThe port where the application is running.\n\n#### options.testFile\n- Type: `String`\n- Default value: `'_SpecRunner.html'`\n\nThe file to load that runs the jasmine tests.\n\n#### options.allTestsTimeout\n- Type: `Number`\n- Default value: `30 * 60 * 1000` (30 minutes)\n\nTime in milliseconds to wait for all of the tests to finish running.\n\n### Command-Line Options\n\n#### --browser=[chrome|firefox|internet explorer|...]\n[source](http://selenium.googlecode.com/svn/trunk/docs/api/py/_modules/selenium/webdriver/common/desired_capabilities.html)\n\nThe browser in which the tests will be run.  Takes precedence over the \"browser\" gruntfile option (above).\n\n#### --keepalive=true\n\nThe selenium server and browser are not closed after the tests have been run.  Useful for interactive\ndebugging of failing tests.\n\n#### --ignoreSloppyTests=true\n\nThe selenium server added a parameter to the query string of url passed to the browser to tell Jasmine to disable\nverification of proper tests cleanup.\n\n### Output\n\nThis task:\n- logs the number of tests executed, the number of failed tests, and the full stack traces (Jasmine output)\nof any failing tests to the Grunt log.  \n- fails if any tests fail.\n\n### Usage Examples\n\n#### Default Options\nThis task isn't very useful by itself. A usual use case if to configure webdriver_jasmine_runner in a \ngrunt.initConfig() call and combine it with other tasks with grunt.registerTask().\n\nIn this example, we start a connect server running the app.  The jasmine:build task also creates an appropriate \n_SpecRunner.html file with the specs to be run.\n\n```coffee\ngrunt.initConfig\n    webdriver_jasmine_runner:\n        myProject:\n            options: {}\n\ngrunt.registerTask 'browser:test', ['default', 'jasmine:build', 'connect', 'webdriver_jasmine_runner']\n```\n\n## Contributing\nDo what you will, but please be careful.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-webdriver-jasmine-runner@0.0.5",
  "dist": {
    "shasum": "362cdbe1916449e4f6a7a60d10456786cdb56a02"
  },
  "_resolved": "git+ssh://git@github.com:RallySoftware/grunt-webdriver-jasmine-runner.git#da42baedfc1a25dc13715abbe40982d9fa019353",
  "_from": "grunt-webdriver-jasmine-runner@git+ssh://git@github.com:RallySoftware/grunt-webdriver-jasmine-runner.git#v0.0.5"
}
